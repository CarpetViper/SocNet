{"version":3,"sources":["redux/usersReducer.js","redux/profileReducer.js","img/loading.svg","api.js","components/formsControls/formsControls.js","serviceWorker.js","components/header/header.jsx","redux/authReducer.js","components/header/headerContainer.jsx","components/navbar/navbar.jsx","components/login/login.jsx","redux/appReducer.js","redux/reduxStore.js","hoc/withSuspense.js","components/description/description.js","App.js","index.js","components/navbar/navbar.module.css","components/header/header.module.css","helpers/validators/validator.js","components/preloader/preloader.jsx","components/login/login.module.css","components/description/description.module.css"],"names":["initialState","users","pageSize","totalUsersCount","currentPage","isFetching","setCurrentPage","type","toggleIsFetching","requestUsers","page","dispatch","a","usersAPI","getUsers","data","items","count","totalCount","UsersReducer","state","action","profile","status","setStatus","getUserProfile","userId","getProfile","response","getStatus","profileAPI","updateStatus","resultCode","savePhoto","file","photos","saveProfile","getState","auth","id","stopSubmit","_error","messages","Promise","reject","ProfileReducer","module","exports","instance","axios","withCredentials","baseURL","headers","get","then","console","warn","put","photoFile","formData","FormData","append","authAPI","me","login","email","password","rememberMe","captcha","post","logout","delete","securityAPI","getCaptchaUrl","FormControl","input","meta","touched","error","children","hasError","Textarea","props","restProps","child","Input","createField","placeholder","name","validator","component","text","validate","Boolean","window","location","hostname","match","Header","className","styles","header_row","header_cell","logo","href","loginlogout","isAuth","onClick","to","captchaUrl","setAuthUserData","payload","getCaptchaUrlEnter","getAuthUserData","url","AuthReducer","HeaderContainer","this","React","Component","connect","Navbar","navbar_row","navbar_cell","navbar_item","activeClassName","activeLink","ReduxLoginForm","reduxForm","form","handleSubmit","onSubmit","required","src","message","length","login_row","login_cell","headLine","initialized","globalError","AppReducer","reducers","combineReducers","usersPage","usersReducer","profilePage","profileReducer","authReducer","formReducer","app","appReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_store_","withSuspense","Suspense","fallback","Description","description_row","description_cell","underline","UsersContainer","lazy","ProfileContainer","App","initializeApp","addEventListener","catchAllUnhandledErrors","removeEventListener","path","render","AppContainer","withRouter","promise","all","SocialNetApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","value","Preloader","preloader"],"mappings":"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","file":"static/js/main.55bb8492.chunk.js","sourcesContent":["import {usersAPI} from '../api';\r\n\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 4,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true\r\n}\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USERS: {\r\n           return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n           return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n           return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n           return {...state, isFetching: action.isFetching}\r\n        }\r\n    default:\r\n        return state;\r\n   }\r\n\r\n}\r\n\r\nexport const setUsers = (users) => ({ type: 'SET_USERS', users});\r\nexport const setCurrentPage = (currentPage) => ({ type: 'SET_CURRENT_PAGE', currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: 'SET_USERS_TOTAL_COUNT', count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({ type: 'TOGGLE_IS_FETCHING', isFetching});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async(dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n            dispatch(toggleIsFetching(false));\r\n    }\r\n}\r\n\r\nexport default UsersReducer;\r\n","import {usersAPI, profileAPI} from '../api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SUCCESSFULLY_SAVED_PHOTO = 'SUCCESSFULLY_SAVED_PHOTO';\r\n\r\nlet initialState = {\r\n  profile: null,\r\n  status: ''\r\n}\r\n\r\nconst ProfileReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n      ...state,\r\n      profile: action.profile}\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n      ...state,\r\n      status: action.status\r\n      }\r\n    }\r\n    case SUCCESSFULLY_SAVED_PHOTO:\r\n      return {...state, profile: {...state.profile, photos:action.photos}}\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport const setUserProfile = (profile) => ({ type: 'SET_USER_PROFILE', profile});\r\nexport const setStatus = (status) => ({ type: 'SET_STATUS', status});\r\nexport const successfullySavedPhoto = (photos) => ({ type: 'SUCCESSFULLY_SAVED_PHOTO', photos});\r\n\r\nexport const getUserProfile = (userId) => async(dispatch) => {\r\n  let response = await usersAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async(dispatch) => {\r\n  let response = await profileAPI.getStatus(userId);\r\n        dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async(dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n        if(response.data.resultCode === 0) {\r\n             dispatch(setStatus(status));\r\n        }\r\n};\r\n\r\nexport const savePhoto = (file) => async(dispatch) => {\r\n  let response = await profileAPI.savePhoto(file);\r\n      if(response.data.resultCode === 0) {\r\n           dispatch(successfullySavedPhoto(response.data.data.photos));\r\n      }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n  const userId = getState().auth.id;\r\n  const response = await profileAPI.saveProfile(profile);\r\n\r\n       if (response.data.resultCode === 0 ) {\r\n       dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default ProfileReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.dc2d7629.svg\";","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n     //'API-KEY':'41ba3a3d-1e56-41b5-9dfc-41a242896377',\r\n     //'API-KEY':'64ca6c0c-d2d3-472c-b42a-f2849c27004e'\r\n     //'API-KEY':'d5badcff-fae6-4f62-a7bf-7da5c9b14673',\r\n     //'API-KEY':'981bfc6a-0b82-4119-ab34-06295e1e45be',\r\n     //'API-KEY':'446079b3-5e5d-43f9-b313-b5795acbab19'\r\n    'API-KEY':'e7177fed-4f56-4f21-8042-3483c6f061a1' // drivechannel@yahoo.com\r\n    //'API-KEY':'af70c230-994a-4bb9-8321-3753352671ff' // temir_jm@yahoo.com\r\n    //'API-KEY':'80d0d2a9-8a06-482c-8ff0-516917965ccc' //janybekmasud@yahoo.com\r\n          //'API-KEY':''                                    //enter.channel@yahoo.com\r\n  }\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    .then(response => {\r\n    return response.data;\r\n    });\r\n  },\r\n  getProfile(userId) {\r\n    console.warn('Obsolete method. Please use profileAPI object')\r\n    return profileAPI.getProfile(userId);\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/` + userId);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, {status: status});\r\n  },\r\n  savePhoto(photoFile) {\r\n    const formData = new FormData();\r\n    formData.append('image', photoFile);\r\n\r\n    return instance.put(`profile/photo`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n  },\r\n  saveProfile(profile) {\r\n    return instance.put(`profile`, profile);\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  me() {\r\n      return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false, captcha = null) {\r\n      return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n  },\r\n  logout() {\r\n      return instance.delete(`auth/login`);\r\n  }\r\n}\r\n\r\nexport const securityAPI = {\r\n  getCaptchaUrl() {\r\n    return instance.get(`security/get-captcha-url`);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Field} from 'redux-form';\r\nimport {maxLengthCreator} from '../../helpers/validators/validator'\r\n\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n\r\n  const hasError = touched && error;\r\n  return (\r\n    <div>\r\n          <div>\r\n              {children}\r\n          </div>\r\n          {hasError && <span>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n\r\n  const {input, meta, child, ...restProps} = props;\r\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validator, component, props = {}, text = '') => (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={validator}\r\n                   component={component}\r\n                   {...props} /> {text}\r\n        </div>\r\n)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n  <div className={styles.header_row}>\r\n    <div className={styles.header_cell}>\r\n        <div className={styles.logo}>\r\n            <a href='./'>Home</a>\r\n        </div>\r\n        <div className={styles.loginlogout}>\r\n            { props.isAuth\r\n              ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n              : <NavLink to={'/login'}>Login</ NavLink> }\r\n        </div>\r\n     </div>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {authAPI, securityAPI} from '../api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst GET_CAPTCHA_URL_ENTER = 'GET_CAPTCHA_URL_ENTER';\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaUrl: null\r\n}\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SET_USER_DATA:\r\n    case GET_CAPTCHA_URL_ENTER:\r\n      return {\r\n      ...state,\r\n      ...action.payload\r\n      }\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({ type: 'SET_USER_DATA', payload:\r\n{id, email, login, isAuth}});\r\n\r\nexport const getCaptchaUrlEnter = (captchaUrl) => ({ type: 'GET_CAPTCHA_URL_ENTER', payload:\r\n{captchaUrl}});\r\n\r\nexport const getAuthUserData = () => async(dispatch) => {\r\n  let response = await authAPI.me();\r\n      if(response.data.resultCode === 0) {\r\n          let {id, login, email} = response.data.data;\r\n          dispatch(setAuthUserData(id, email, login, true));\r\n     }\r\n}\r\nexport const login = (email, password, rememberMe, captcha) => async(dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe, captcha);\r\n      if(response.data.resultCode === 0) {\r\n           dispatch(getAuthUserData())\r\n       } else {\r\n         if (response.data.resultCode === 10) {\r\n             dispatch(getCaptchaUrl());\r\n         }\r\n         let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Wrong email or password';\r\n         dispatch(stopSubmit('login', {_error: message}));\r\n       }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async(dispatch) => {\r\n  const response = await securityAPI.getCaptchaUrl();\r\n      const captchaUrl = response.data.url;\r\n         dispatch(getCaptchaUrlEnter(captchaUrl));\r\n       }\r\n\r\nexport const logout = () => async(dispatch) => {\r\n  let response = await authAPI.logout();\r\n      if(response.data.resultCode === 0) {\r\n           dispatch(setAuthUserData(null, null, null, false));\r\n       }\r\n}\r\n\r\nexport default AuthReducer;\r\n","import React from 'react';\r\nimport Header from './header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../redux/authReducer';\r\nimport styles from './header.module.css';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n     return (\r\n        <div>\r\n             <Header {...this.props} />\r\n        </div>\r\n     );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n   login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps,\r\n  {logout})(HeaderContainer);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n<div className={styles.navbar_row}>\r\n    <div className={styles.navbar_cell}>\r\n         <div className={styles.navbar_item}>\r\n             <NavLink to ='/profile' activeClassName={styles.activeLink}>Profile</NavLink>\r\n         </div>\r\n         <div className={styles.navbar_item}>\r\n             <NavLink to ='/users' activeClassName={styles.activeLink}>Users</NavLink>\r\n         </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport {reduxForm} from 'redux-form'\r\nimport {required} from '../../helpers/validators/validator';\r\nimport {Input, createField} from '../formsControls/formsControls';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../redux/authReducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport styles from './login.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n\r\n  return (\r\n    <div>\r\n        <form onSubmit={handleSubmit}>\r\n               {createField('Email', 'email', [required], Input)}\r\n               {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n               {createField(null, 'rememberMe', [], Input, {type: 'checkbox'})}\r\n\r\n               {captchaUrl && <img src={captchaUrl} />}\r\n               {captchaUrl && createField('Simbols from image', 'captcha', [required], Input, {})}\r\n\r\n               {error && <div>{error}</div> }\r\n               <div>\r\n                   <button>Login</button>\r\n               </div>\r\n        </form>\r\n   </div>\r\n   )\r\n}\r\n\r\nconst ReduxLoginForm  = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n  }\r\n\r\n  if(props.isAuth) {\r\n    return <Redirect to={'/profile'} />\r\n  }\r\n\r\n  return (\r\n    <div  className={styles.login_row}>\r\n        <div  className={styles.login_cell}>\r\n        <h1 className={styles.headLine}>Login</h1>\r\n        <ReduxLoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  captchaUrl: state.auth.captchaUrl,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} )(Login);\r\n","import {authAPI} from '../api';\r\nimport {stopSubmit} from 'redux-form';\r\nimport {getAuthUserData} from '../redux/authReducer';\r\n\r\nconst SEUCCESSFULY_INITIALIZED = 'SEUCCESSFULY_INITIALIZED';\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n  globalError: null\r\n}\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SEUCCESSFULY_INITIALIZED: {\r\n      return {\r\n        ...state,\r\n      initialized: true\r\n      }\r\n    }\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport const successfullyInitialized = () => ({ type: 'SEUCCESSFULY_INITIALIZED'});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  Promise.all([promise])\r\n       .then(() => {\r\n       dispatch(successfullyInitialized());\r\n       });\r\n}\r\n\r\nexport default AppReducer;\r\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport usersReducer from './usersReducer';\r\nimport profileReducer from './profileReducer';\r\nimport authReducer from './authReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from './appReducer';\r\n\r\nlet reducers = combineReducers({\r\n  usersPage: usersReducer,\r\n  profilePage: profileReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow._store_ = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport Preloader from '../components/preloader/preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n  return(props) => {\r\n    return <React.Suspense fallback={<Preloader/>}>\r\n      <Component {...props}/>\r\n    </React.Suspense>\r\n  };\r\n}\r\n","import React from 'react';\r\nimport styles from './description.module.css';\r\n\r\nconst Description = () => {\r\n  return (\r\n      <div className={styles.description_row}>\r\n          <div className={styles.description_cell}>\r\n                  Данное WEB-приложение написано с помощью библиотеки React.JS и состоит из клиентской и серверной частей, логика распределена между сервером и\r\n                  клиентом тем самым реализуя технологию «клиент-сервер» хранение данных осуществляется преимущественно на сервере, клиентская часть реализует\r\n                  пользовательский интерфейс, формирует запросы к серверу и обрабатывает ответы от него, серверная часть получает запрос от клиента, выполняет\r\n                  вычисления, после этого формирует веб-страницу и отправляет её клиенту.\r\n                  <p>Архитектура приложения состоит из трех слоёв UI (User Interface), BLL (Business Logic Layer) и DAL (Data Access Layer).</p>\r\n                  <p><span className={styles.underline}>Приложение находится на стадии разработки поэтому некоторые функции отсутствуют. Предполагаются чат, видео чат, файлообменник и регистрационная форма.\r\n                  Для входа в приложение воспользуйтесь этими данными: Email: tester78957@yahoo.com Password: testersvvs. В случае если вы не сможете войти в аккаунт я вышлю новые логин(Email) и пароль.\r\n                  Отправьте sms запрос на мой телефон 0556 433311, обязательно напишите название вашей IT-Компании в запросе.</span></p>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Description;\r\n","import React, {Component} from 'react';\nimport HeaderContainer from './components/header/headerContainer';\nimport Navbar from './components/navbar/navbar';\nimport Login from './components/login/login';\nimport {Route, withRouter, Switch} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {initializeApp} from './redux/appReducer';\nimport {compose} from 'redux';\nimport Preloader from './components/preloader/preloader';\nimport {BrowserRouter} from 'react-router-dom';\nimport store from './redux/reduxStore';\nimport {Provider} from 'react-redux';\nimport {withSuspense} from './hoc/withSuspense';\nimport Description from './components/description/description';\n\n\nconst UsersContainer = React.lazy(() => import('./components/users/usersContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/profile/profileContainer'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp();\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n  }\n    render() {\n      if(!this.props.initialized) {\n        return <Preloader />\n      }\n      return (\n                <div>\n                     <HeaderContainer />\n                     <Navbar />\n                     <div>\n                         <Switch>\n                          <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} />\n                          <Route path='/users' render={withSuspense(UsersContainer)} />\n                          <Route path='/login' render={ () => <Login />} />\n                          <Route path='*' render={ () => <Description/>} />\n                         </Switch>\n                     </div>\n                </div>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SocialNetApp = (props) => {\n  return <BrowserRouter>\n     <Provider store={store}>\n          <AppContainer />\n     </Provider>\n  </BrowserRouter>\n}\n\nexport default SocialNetApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport SocialNetApp from './App';\n\n        ReactDOM.render(<SocialNetApp />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar_item\":\"navbar_navbar_item__1rUH7\",\"activeLink\":\"navbar_activeLink__3ZBp4\",\"navbar_cell\":\"navbar_navbar_cell__2GLXH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_row\":\"header_header_row__3TZtD\",\"header_cell\":\"header_header_cell__vb4Do\",\"logo\":\"header_logo__Hp0Zb\",\"loginlogout\":\"header_loginlogout__bkdMc\"};","export const required = value => {\r\n  if (value) return undefined;\r\n\r\n  return 'Required field';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return 'Max length is ${maxLength} simbols';\r\n\r\n  return undefined;\r\n}\r\n","import React from 'react';\r\nimport preloader from '../../img/loading.svg';\r\n\r\nlet Preloader = (props) => {\r\n  return <div>\r\n              <img src={preloader} />\r\n      </div>\r\n}\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_row\":\"login_login_row__2H7yO\",\"login_cell\":\"login_login_cell__3vGCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description_cell\":\"description_description_cell__3_rML\",\"underline\":\"description_underline__3UF9I\"};"],"sourceRoot":""}